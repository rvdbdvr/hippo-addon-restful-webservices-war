<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    version="2.5"
    id="cms">

  <!-- General configuration -->
  <display-name>Hippo REST addon</display-name>
  <description>Hippo REST addon</description>

<!-- 
  <context-param>
    <description>The address of the repository</description>
    <param-name>repository-address</param-name>
    <param-value>vm://</param-value>
  </context-param>
  <context-param>
    <description>The (relative) location where to store files</description>
    <param-name>repository-directory</param-name>
    <param-value>WEB-INF/storage</param-value>
  </context-param>
  <context-param>
    <description>The location of the repository configuration file. Unless the location
    starts with file://, the location is retrieved from within the application package as
    resource.</description>
    <param-name>repository-config</param-name>
    <param-value>repository.xml</param-value>
  </context-param>
  -->

<security-constraint>
	<web-resource-collection>
		<web-resource-name>Require authorization all over</web-resource-name>
		<url-pattern>/*</url-pattern>
		<http-method>GET</http-method>
		<http-method>POST</http-method>
	</web-resource-collection>
	<auth-constraint>
		<role-name>rest</role-name>
	</auth-constraint>

	<user-data-constraint>
		<!-- transport-guarantee can be CONFIDENTIAL, INTEGRAL, or NONE -->
		<transport-guarantee>NONE</transport-guarantee>
	</user-data-constraint>
</security-constraint>

<login-config>
	<auth-method>BASIC</auth-method>
</login-config>
	
    <!--No concurrent logins- ->
    
  <filter>
    <filter-name>ConcurrentLogin</filter-name>
    <filter-class>org.hippoecm.frontend.plugins.login.ConcurrentLoginFilter</filter-class>
  </filter>
    
  <filter-mapping>
    <filter-name>ConcurrentLogin</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <listener>
    <listener-class>org.hippoecm.frontend.plugins.login.ConcurrentLoginListener</listener-class>
  </listener>
  -->

<!--   <servlet>
    <servlet-name>LoggingServlet</servlet-name>
    <servlet-class>org.hippoecm.repository.LoggingServlet</servlet-class>
    <load-on-startup>3</load-on-startup>
  </servlet>
  
  <servlet> 
    <servlet-name>PingServlet</servlet-name> 
    <servlet-class>org.hippoecm.repository.PingServlet</servlet-class> 
    <init-param>
      <param-name>repository-address</param-name>
      <param-value>vm://</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup> 
  </servlet> -->

  <servlet>
    <servlet-name>RepositoryWebservicesServlet</servlet-name>
    <servlet-class>org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet</servlet-class>
    <init-param>
      <param-name>jaxrs.serviceClasses</param-name>
      <param-value>
        com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON,
        org.onehippo.forge.webservices.jaxrs.RootResource,
        org.onehippo.forge.webservices.jaxrs.StatsResource,
        org.onehippo.forge.webservices.jaxrs.system.SystemResource,
        org.onehippo.forge.webservices.jaxrs.jcr.NodesResource,
        org.onehippo.forge.webservices.jaxrs.jcr.PropertiesResource,
        org.onehippo.forge.webservices.jaxrs.jcr.QueryResource,
        org.onehippo.forge.webservices.jaxrs.hippo.HippoResource,
        org.onehippo.forge.webservices.jaxrs.management.UsersResource,
        org.onehippo.forge.webservices.jaxrs.management.GroupsResource
      </param-value>
    </init-param>
    <init-param>
      <param-name>jaxrs.providers</param-name>
      <param-value>
        org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider,
        org.onehippo.forge.webservices.jaxrs.CustomJacksonConfig,
        org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter,
        org.onehippo.forge.webservices.jaxrs.exception.CustomWebApplicationExceptionMapper,
        org.onehippo.forge.webservices.HippoAuthenticationRequestHandler,
        com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider,
        com.wordnik.swagger.jaxrs.listing.ResourceListingProvider,
      </param-value>
    </init-param>
    <init-param>
      <param-name>jaxrs.extensions</param-name>
      <param-value>json=application/json, xml=application/xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>ReflectiveJaxrsConfig</servlet-name>
    <servlet-class>org.onehippo.forge.webservices.swagger.ReflectiveJaxrsConfig</servlet-class>
    <init-param>
      <param-name>resourcePackage</param-name>
      <param-value>org.onehippo.forge.webservices.jaxrs</param-value>
    </init-param>
    <init-param>
      <param-name>swagger.api.basepath</param-name>
      <param-value>${base.url}</param-value>
    </init-param>
    <init-param>
      <param-name>api.version</param-name>
      <param-value>0.1.0</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  
  <!-- 
  <servlet>
    <servlet-name>HstSiteConfigServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.site.container.HstSiteConfigServlet</servlet-class>
    <!- -
      If 'hst-config-refresh-delay' parameter is greater than 0,
      then the HST configuration file changes will be monitored to re-initialize the HST Container.
      The value is in ms. If set to 0 or missing, the re-initialization option on configuration file changes is not turned on.
      Default below is set to 3 sec
    - ->
    <init-param>
      <param-name>hst-config-refresh-delay</param-name>
      <param-value>3000</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
   -->

  <servlet-mapping>
    <servlet-name>RepositoryWebservicesServlet</servlet-name>
    <url-pattern>/api/*</url-pattern>
  </servlet-mapping>

<!--   <servlet-mapping> 
    <servlet-name>PingServlet</servlet-name> 
    <url-pattern>/ping/</url-pattern> 
  </servlet-mapping>
 -->
  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/error.jsp</location>
  </error-page>

  <error-page>
    <exception-type>java.lang.Throwable</exception-type>
    <location>/WEB-INF/error.jsp</location>
  </error-page>

<!--   <env-entry>
    <env-entry-name>logging/contextName</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>rest</env-entry-value>
  </env-entry> -->

</web-app>
